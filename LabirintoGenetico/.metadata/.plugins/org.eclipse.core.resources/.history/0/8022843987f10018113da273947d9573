package Labirinto;

import java.util.Random;
import java.util.Scanner;

public class GeraLabirinto {
	
	public int[][] geraLabirinto() {
		int [][] labirinto = new int[202][202];
		Scanner scanner = new Scanner(System.in);
		
		System.out.println("Inserira as coordenadas da saída x e y: ");
		int fimX = scanner.nextInt();
		int fimY = scanner.nextInt();
		
		labirinto[fimY][fimX] = 9;
		
		for (int  linha = 0 ; linha < labirinto.length ; linha++) {
			for (int coluna = 0 ; coluna < labirinto[0].length ; coluna++) {
				if (linha == 0 || coluna == 0 || linha == 201 || coluna == 201) {
					labirinto[linha][coluna] = 1;
				} else if (labirinto[linha][coluna] != 9) {
					labirinto[linha][coluna] = 0;
				}
			}
		}
		
		for (int i = 0 ; i < 1000 ; i++) {
			int geraX = getRandomNumberInRange(0, 201);
			int geraY = getRandomNumberInRange(0, 201);
			
			while (labirinto[geraY][geraX] != 9 && labirinto[geraY][geraX] != 1 && geraX != 1 && geraY != 1) {
				labirinto[geraY][geraX] = 1;
			}
		}
		
		return labirinto;
		
	}
	
	//https://www.mkyong.com/java/java-generate-random-integers-in-a-range/
	private static int getRandomNumberInRange(int min, int max) {

		if (min >= max) {
			throw new IllegalArgumentException("max must be greater than min");
		}

		Random r = new Random();
		return r.nextInt((max - min) + 1) + min;
	}

}
